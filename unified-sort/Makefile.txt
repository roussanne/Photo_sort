PY ?= python
PIP ?= pip

.PHONY: help venv install dev run lint format typecheck test build clean dist precommit-install checks

help:
	@echo "Targets: venv, install, dev, run, lint, format, typecheck, test, build, dist, clean, precommit-install, checks"

venv:
	$(PY) -m venv .venv
	@echo "Activate: .venv\\Scripts\\activate (Windows) or source .venv/bin/activate (Unix)"

install:
	$(PIP) install -e .
	@echo "Installed core dependencies"

dev:
	$(PIP) install -e .[heic,raw,deeplearn]
	$(PIP) install -r requirements.txt
	$(PIP) install black isort flake8 mypy pytest coverage build pre-commit
	@echo "Developer environment ready"

run:
	streamlit run app/streamlit_app.py

lint:
	flake8 .

format:
	black .
	isort .

typecheck:
	mypy unified_sort || true

test:
	pytest

checks: format lint typecheck test

build:
	$(PY) -m build

dist: clean build
	@echo "Built artifacts in dist/"

clean:
	rm -rf build dist *.egg-info .mypy_cache .pytest_cache
	@echo "Cleaned build caches"

precommit-install:
	pre-commit install
